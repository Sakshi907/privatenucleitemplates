id: api-keys
name: "api key pattern"
desc: "grep for api key pattern"
risk: "High"
level: 1
rules:
  - id: api-key-01
    reason: "Artifactory"
    detections:
      - >-
        RegexSearch("response", "(?i)artifactory.{0,50}(\\\"|'|`)?[a-zA-Z0-9=]{112}(\\\"|'|`)?")
  - id: api-key-02
    reason: "Code Clima"
    detections:
      - >-
        RegexSearch("response", "(?i)codeclima.{0,50}(\\\"|'|`)?[0-9a-f]{64}(\\\"|'|`)?")
  - id: api-key-03
    reason: "Facebook Access Token"
    detections:
      - >-
        RegexSearch("response", "EAACEdEose0cBA[0-9A-Za-z]+")
  - id: api-key-04
    reason: "Facebook Access Token Base64"
    detections:
      - >-
        RegexSearch("response", "RUFBQ0VkRW9zZTBjQk[%a-zA-Z0-9+/]+={0,2}")
  - id: api-key-05
    reason: "Facebook Oauth"
    detections:
      - >-
        RegexSearch("response", "(?i)facebook[^/]{0,50}(\\\"|'|`)?[0-9a-f]{32}(\\\"|'|`)?")
  - id: api-key-06
    reason: "Google (GCP) Service-account"
    detections:
      - >-
        RegexSearch("response", "((\\\"|'|`)?type(\\\"|'|`)?\\\\s{0,50}(:|=>|=)\\\\s{0,50}(\\\"|'|`)?service_account(\\\"|'|`)?,?)")
  - id: api-key-07
    reason: "Google API Key"
    detections:
      - >-
        RegexSearch("response", "AIza[0-9A-Za-z\\-_]{35}")
  - id: api-key-08
    reason: "Google API Key Base64"
    detections:
      - >-
        RegexSearch("response", "QUl6Y[%a-zA-Z0-9+/]{47}")
  - id: api-key-09
    reason: "Google OAuth"
    detections:
      - >-
        RegexSearch("response", "[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com")
  # - id: api-key-10
  #   reason: "Google Recaptcha key"
  #   detections:
  #     - >-
  #       RegexSearch("response", "6L[0-9A-Za-z-_]{38}")

  - id: api-key-11
    reason: "Google OAuth Access Token"
    detections:
      - >-
        RegexSearch("response", "ya29\\.[0-9A-Za-z\\-_]+")
  - id: api-key-12
    reason: "Google Oauth"
    detections:
      - >-
        RegexSearch("response", "((\\\"|'|`)?client_secret(\\\"|'|`)?\\\\s{0,50}(:|=>|=)\\\\s{0,50}(\\\"|'|`)?[a-zA-Z0-9-_]{24}(\\\"|'|`)?)")
  - id: api-key-13
    reason: "Heroku API Key"
    detections:
      - >-
        RegexSearch("response", "(?i)heroku.{0,50}[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}")
  - id: api-key-14
    reason: "Hockeyapp"
    detections:
      - >-
        RegexSearch("response", "(?i)hockey.{0,50}(\\\"|'|`)?[0-9a-f]{32}(\\\"|'|`)?")
  - id: api-key-15
    reason: "MailChimp API Key"
    detections:
      - >-
        RegexSearch("response", "[0-9a-f]{32}-us[0-9]{1,2}")
  - id: api-key-16
    reason: "Mailgun API Key"
    detections:
      - >-
        RegexSearch("response", "key-[0-9a-zA-Z]{32}")
  - id: api-key-17
    reason: "NuGet API Key"
    detections:
      - >-
        RegexSearch("response", "oy2[a-z0-9]{43}")
  - id: api-key-18
    reason: "Outlook team"
    detections:
      - >-
        RegexSearch("response", "https\\://outlook\\.office.com/webhook/[0-9a-f-]{36}\\@")
  - id: api-key-19
    reason: "PayPal Braintree Access Token"
    detections:
      - >-
        RegexSearch("response", "access_token\\$(live|production)\\$[0-9a-z]{16}\\$[0-9a-f]{32}")
  - id: api-key-20
    reason: "Sauce"
    detections:
      - >-
        RegexSearch("response", "(?i)sauce.{0,50}(\\\"|'|`)?[0-9a-f-]{36}(\\\"|'|`)?")
  - id: api-key-21
    reason: "Slack Token"
    detections:
      - >-
        RegexSearch("response", "(xox[pboa]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})")
  - id: api-key-22
    reason: "Slack Webhook"
    detections:
      - >-
        RegexSearch("response", "https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}")
  - id: api-key-23
    reason: "Sonar"
    detections:
      - >-
        RegexSearch("response", "(?i)sonar.{0,50}(\\\"|'|`)?[0-9a-f]{40}(\\\"|'|`)?")
  - id: api-key-24
    reason: "Square Access Token"
    detections:
      - >-
        RegexSearch("response", "sq0atp-[0-9A-Za-z\\-_]{22}")
  - id: api-key-25
    reason: "Square OAuth Secret"
    detections:
      - >-
        RegexSearch("response", "sq0csp-[0-9A-Za-z\\-_]{43}")
  - id: api-key-26
    reason: "Stripe API Key"
    detections:
      - >-
        RegexSearch("response", "sk_live_[0-9a-zA-Z]{24}")
  - id: api-key-27
    reason: "Stripe Restricted API Key"
    detections:
      - >-
        RegexSearch("response", "rk_live_[0-9a-zA-Z]{24}")
  - id: api-key-28
    reason: "Picatic API Key"
    detections:
      - >-
        RegexSearch("response", "sk_live_[0-9a-z]{32}")
  - id: api-key-29
    reason: "SendGrid API Key"
    detections:
      - >-
        RegexSearch("response", "SG\\.[\\w_]{16,32}\\.[\\w_]{16,64}")
  - id: api-key-30
    reason: "LinkedIn Client ID"
    detections:
      - >-
        RegexSearch("response", "(?i)linkedin(.{0,20})?(?-i)['\"][0-9a-z]{12}['\"]")
  - id: api-key-31
    reason: "LinkedIn Secret Key"
    detections:
      - >-
        RegexSearch("response", "(?i)linkedin(.{0,20})?['\"][0-9a-z]{16}['\"]")
  - id: api-key-32
    reason: "Cloudinary Basic Auth"
    detections:
      - >-
        RegexSearch("response", "(?i)cloudinary:\/\/[0-9]{15}:[0-9A-Za-z]+@[a-z]+")
  - id: api-key-33
    reason: "WP-Config"
    detections:
      - >-
        RegexSearch("response", "define(.{0,20})?(DB_CHARSET|NONCE_SALT|LOGGED_IN_SALT|AUTH_SALT|NONCE_KEY|DB_HOST|DB_PASSWORD|AUTH_KEY|SECURE_AUTH_KEY|LOGGED_IN_KEY|DB_NAME|DB_USER)(.{0,20})?['|\"].{10,120}['|\"]")
  - id: api-key-34
    reason: "Surge"
    detections:
      - >-
        RegexSearch("response", "(?i)surge.{0,50}(\\\"|'|`)?[0-9a-f]{32}(\\\"|'|`)?")
  - id: api-key-35
    reason: "Twilio API Key"
    detections:
      - >-
        RegexSearch("response", "SK[0-9a-fA-F]{32}")
  - id: api-key-36
    reason: "Twitter Oauth"
    detections:
      - >-
        RegexSearch("response", "(?i)twitter[^/]{0,50}[0-9a-zA-Z]{35,44}")
  - id: api-key-37
    reason: "Password in URL"
    detections:
      - >-
        RegexSearch("response", "[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}[\"'\\s]")
  - id: api-key-38
    reason: "Tenable key"
    detections:
      - >-
        RegexSearch("response", "(?i)['\"]?[a-z-_]*(tenable|nessus)[a-z-_]*['\"]?\\s*[=:]\\s*['\"]?\\w{64}['\"]?\\s*,?\\s*$")
  - id: api-key-39
    reason: "Github Access Token"
    detections:
      - >-
        RegexSearch("response", "(?i)github(.{0,20})?(?-i)['\"][0-9a-zA-Z]{35,40}['\"]")
  - id: api-key-40
    reason: "Github Access Token 2"
    detections:
      - >-
        RegexSearch("response", "[a-zA-Z0-9_-]*:[a-zA-Z0-9_\\-]+@github\\.com*")
  - id: api-key-41
    reason: "S3 Bucket"
    detections:
      - >-
        RegexSearch("response", "[a-z0-9.-]+\\.s3\\.amazonaws\\.com|[a-z0-9.-]+\\.s3-[a-z0-9-]\\.amazonaws\\.com|[a-z0-9.-]+\\.s3-website[.-](eu|ap|us|ca|sa|cn)|//s3\\.amazonaws\\.com/[a-z0-9._-]+|//s3-[a-z0-9-]+\\.amazonaws\\.com/[a-z0-9._-]+")
  - id: api-key-42
    reason: "Json Web Token"
    detections:
      - >-
        RegexSearch("response", "ey[A-Za-z0-9_=-]+\\.ey[A-Za-z0-9_=-]+\\.?[A-Za-z0-9_.+/=-]*")
  - id: api-key-43
    reason: "Authorization Header"
    detections:
      - >-
        RegexSearch("response", "^(Bearer|Basic) [a-zA-Z0-9_=-]+$")