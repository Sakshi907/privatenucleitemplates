id: apollo-default-login

info:
  name: Apollo Default Login
  author: PaperPen
  severity: high
  description: An Apollo default login was discovered.
  reference:
    - https://github.com/apolloconfig/apollo
  classification:
    cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L
    cvss-score: 8.3
    cwe-id: CWE-522
  metadata:
    shodan-query: http.favicon.hash:11794165
  tags: apollo,default-login

requests:
  - raw:
      - |
        POST /signin HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/x-www-form-urlencoded
        Origin: {{BaseURL}}
        Referer: {{BaseURL}}/signin?

        username={{user}}&password={{pass}}&login-submit=Login

      - |
        GET /user HTTP/1.1
        Host: {{Hostname}}

    attack: pitchfork
    payloads:
      user:
        - apollo
      pass:
        - admin

    cookie-reuse: true
    req-condition: true
    matchers-condition: and
    matchers:
      - type: word
        part: body_2
        words:
          - '"userId":'
          - '"email":'
        condition: or

      - type: dsl
        dsl:
          - "status_code_1 == 302 && status_code_2 == 200"
          - "contains(tolower(all_headers_2), 'application/json')"
        condition: and

# Enhanced by mp on 2022/03/22
