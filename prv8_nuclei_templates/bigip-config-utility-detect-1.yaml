id: bigip-config-utility 1

info:
  name: BIG-IP Configuration Utility detected
  author: dwisiswant0
  severity: info

requests:
  - payloads:
      Subdomains: /home/mahmoud/Wordlist/AllSubdomains.txt
    attack: sniper
    threads: 100

    raw:
      - |
        GET /tmui/login.jsp HTTP/1.1
        Host: {{Subdomains}}
        User-Agent: Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0
        Accept-Encoding: gzip, deflate
        Accept: */*
        
    matchers-condition: or
    matchers:
      - type: word
        words:
          - "Welcome to the BIG-IP"
          - "Configuration Utility"
        condition: and
        part: body
      - type: word
        words:
          - "WWW-Authenticate: Basic realm"
          - "Enterprise Manager"
        condition: and
        part: header
      - type: word
        words:
          - "check your user-id and password and try again"
        part: body